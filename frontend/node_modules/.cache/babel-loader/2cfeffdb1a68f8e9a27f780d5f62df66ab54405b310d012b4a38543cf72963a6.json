{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHASHANK PADMA\\\\Desktop\\\\nxtwaveprojectfolder\\\\amberflux Assignment\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RecordScreen from './components/RecordScreen';\nimport RecordingList from './components/RecordingList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [activeTab, setActiveTab] = useState('record');\n  const [refreshList, setRefreshList] = useState(false);\n  const handleRecordingComplete = () => {\n    setRefreshList(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Screen Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'record' ? 'active' : '',\n          onClick: () => setActiveTab('record'),\n          children: \"Record\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeTab === 'recordings' ? 'active' : '',\n          onClick: () => setActiveTab('recordings'),\n          children: \"My Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: activeTab === 'record' ? /*#__PURE__*/_jsxDEV(RecordScreen, {\n        onRecordingComplete: handleRecordingComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(RecordingList, {}, refreshList, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PoCPVI2eIG+jS8X5nPRnlfFQ5PQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RecordScreen","RecordingList","jsxDEV","_jsxDEV","App","_s","activeTab","setActiveTab","refreshList","setRefreshList","handleRecordingComplete","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onRecordingComplete","_c","$RefreshReg$"],"sources":["C:/Users/SHASHANK PADMA/Desktop/nxtwaveprojectfolder/amberflux Assignment/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport RecordScreen from './components/RecordScreen';\r\nimport RecordingList from './components/RecordingList';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [activeTab, setActiveTab] = useState('record');\r\n  const [refreshList, setRefreshList] = useState(false);\r\n\r\n  const handleRecordingComplete = () => {\r\n    setRefreshList(prev => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Screen Recorder</h1>\r\n        <nav>\r\n          <button \r\n            className={activeTab === 'record' ? 'active' : ''}\r\n            onClick={() => setActiveTab('record')}\r\n          >\r\n            Record\r\n          </button>\r\n          <button \r\n            className={activeTab === 'recordings' ? 'active' : ''}\r\n            onClick={() => setActiveTab('recordings')}\r\n          >\r\n            My Recordings\r\n          </button>\r\n        </nav>\r\n      </header>\r\n      \r\n      <main>\r\n        {activeTab === 'record' ? (\r\n          <RecordScreen onRecordingComplete={handleRecordingComplete} />\r\n        ) : (\r\n          <RecordingList key={refreshList} />\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,uBAAuB,GAAGA,CAAA,KAAM;IACpCD,cAAc,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EAC/B,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAQS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5BV,OAAA;QAAAU,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAAU,QAAA,gBACEV,OAAA;UACES,SAAS,EAAEN,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAG;UAClDY,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,QAAQ,CAAE;UAAAM,QAAA,EACvC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTd,OAAA;UACES,SAAS,EAAEN,SAAS,KAAK,YAAY,GAAG,QAAQ,GAAG,EAAG;UACtDY,OAAO,EAAEA,CAAA,KAAMX,YAAY,CAAC,YAAY,CAAE;UAAAM,QAAA,EAC3C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAETd,OAAA;MAAAU,QAAA,EACGP,SAAS,KAAK,QAAQ,gBACrBH,OAAA,CAACH,YAAY;QAACmB,mBAAmB,EAAET;MAAwB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE9Dd,OAAA,CAACF,aAAa,MAAMO,WAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACnC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACZ,EAAA,CArCQD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}