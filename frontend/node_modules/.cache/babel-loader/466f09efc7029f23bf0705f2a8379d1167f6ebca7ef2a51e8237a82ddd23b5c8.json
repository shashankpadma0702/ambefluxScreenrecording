{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHASHANK PADMA\\\\Desktop\\\\nxtwaveprojectfolder\\\\amberflux Assignment\\\\frontend\\\\src\\\\components\\\\RecordingList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getRecordings, getRecordingUrl } from '../services/api';\nimport VideoPlayer from './VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordingList = () => {\n  _s();\n  const [recordings, setRecordings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchRecordings();\n  }, []);\n  const fetchRecordings = async () => {\n    try {\n      setLoading(true);\n      const response = await getRecordings();\n      setRecordings(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch recordings');\n      setLoading(false);\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const formatDate = dateString => {\n    return new Date(dateString).toLocaleString();\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading recordings...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recording-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recordings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), recordings.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recordings found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recordings\",\n      children: recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recording.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Size: \", formatFileSize(recording.filesize)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Created: \", formatDate(recording.createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          src: getRecordingUrl(recording.id),\n          title: recording.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, recording.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordingList, \"72oQOd4zSJN3Vpqc4rSberhTp3U=\");\n_c = RecordingList;\nexport default RecordingList;\nvar _c;\n$RefreshReg$(_c, \"RecordingList\");","map":{"version":3,"names":["React","useState","useEffect","getRecordings","getRecordingUrl","VideoPlayer","jsxDEV","_jsxDEV","RecordingList","_s","recordings","setRecordings","loading","setLoading","error","setError","fetchRecordings","response","data","err","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","formatDate","dateString","Date","toLocaleString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","recording","filename","filesize","createdAt","src","id","title","_c","$RefreshReg$"],"sources":["C:/Users/SHASHANK PADMA/Desktop/nxtwaveprojectfolder/amberflux Assignment/frontend/src/components/RecordingList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getRecordings, getRecordingUrl } from '../services/api';\r\nimport VideoPlayer from './VideoPlayer';\r\n\r\nconst RecordingList = () => {\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchRecordings();\r\n  }, []);\r\n\r\n  const fetchRecordings = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await getRecordings();\r\n      setRecordings(response.data);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError('Failed to fetch recordings');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    return new Date(dateString).toLocaleString();\r\n  };\r\n\r\n  if (loading) return <div>Loading recordings...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"recording-list\">\r\n      <h2>Recordings</h2>\r\n      {recordings.length === 0 ? (\r\n        <p>No recordings found</p>\r\n      ) : (\r\n        <div className=\"recordings\">\r\n          {recordings.map(recording => (\r\n            <div key={recording.id} className=\"recording-item\">\r\n              <div className=\"recording-info\">\r\n                <h3>{recording.filename}</h3>\r\n                <p>Size: {formatFileSize(recording.filesize)}</p>\r\n                <p>Created: {formatDate(recording.createdAt)}</p>\r\n              </div>\r\n              <VideoPlayer \r\n                src={getRecordingUrl(recording.id)} \r\n                title={recording.filename}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordingList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}